package com.example.demo.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;
import org.springframework.web.cors.CorsConfiguration;
import org.springframework.web.cors.UrlBasedCorsConfigurationSource;
import org.springframework.web.filter.CorsFilter;

import java.util.List;

@Configuration
@EnableWebSecurity
public class SecurityConfig {

    @Autowired
    private JwtFilter jwtFilter;


    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        http
                .cors()
                .and()
                .csrf().disable()
                .authorizeRequests()
                .antMatchers("/auth/**").permitAll()
                .antMatchers("/students").authenticated()
                .anyRequest().permitAll()
                .and()
                .addFilterBefore(jwtFilter, UsernamePasswordAuthenticationFilter.class);
        return http.build();
    }

    @Bean
    public PasswordEncoder passwordEncoder() {
        return new BCryptPasswordEncoder();
    }

    @Bean
    public CorsFilter corsFilter() {
        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();
        CorsConfiguration config = new CorsConfiguration();
        config.setAllowCredentials(true); // ‚úÖ –î–æ–∑–≤–æ–ª—è—î–º–æ –∫—É–∫—ñ —Ç–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∏
        config.setAllowedOrigins(List.of("http://localhost:3000")); // ‚úÖ –î–æ–∑–≤–æ–ª—è—î–º–æ —Ç—ñ–ª—å–∫–∏ frontend
        config.setAllowedHeaders(List.of("*")); // ‚úÖ –î–æ–∑–≤–æ–ª—è—î–º–æ –≤—Å—ñ –∑–∞–≥–æ–ª–æ–≤–∫–∏
        config.setExposedHeaders(List.of("Authorization")); // ‚úÖ –î–æ–∑–≤–æ–ª—è—î–º–æ `Authorization`
        config.setAllowedMethods(List.of("GET", "POST", "PUT", "DELETE", "OPTIONS")); // ‚úÖ –î–æ–∑–≤–æ–ª—è—î–º–æ `OPTIONS`

        source.registerCorsConfiguration("/**", config);
        return new CorsFilter(source);
    }


    /**
     * –©–æ —Ç–∞–∫–µ CORS (Cross-Origin Resource Sharing)?
     * CORS (Cross-Origin Resource Sharing) ‚Äì —Ü–µ –º–µ—Ö–∞–Ω—ñ–∑–º –±–µ–∑–ø–µ–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞, —è–∫–∏–π –≤–∏–∑–Ω–∞—á–∞—î —á–∏ –¥–æ–∑–≤–æ–ª–µ–Ω–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É (http://localhost:3000) —Ä–æ–±–∏—Ç–∏ –∑–∞–ø–∏—Ç–∏ –¥–æ –±–µ–∫–µ–Ω–¥—É (http://localhost:8081).
     *
     * üîí –ü—Ä–æ–±–ª–µ–º–∞ –±–µ–∑ CORS:
     * –ö–æ–ª–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ (http://localhost:3000) –Ω–∞–¥—Å–∏–ª–∞—î –∑–∞–ø–∏—Ç –Ω–∞ –±–µ–∫–µ–Ω–¥ (http://localhost:8081), –±—Ä–∞—É–∑–µ—Ä –±–ª–æ–∫—É—î –∑–∞–ø–∏—Ç —á–µ—Ä–µ–∑ Same-Origin Policy.
     *
     * üîì CORS –¥–æ–∑–≤–æ–ª—è—î —Ç–∞–∫—ñ –∑–∞–ø–∏—Ç–∏, —è–∫—â–æ —Å–µ—Ä–≤–µ—Ä –ø–æ–≤–µ—Ä—Ç–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ –∑–∞–≥–æ–ª–æ–≤–∫–∏.
     *
     * üîç –ö–æ–ª–∏ CORS –ø–æ—Ç—Ä—ñ–±–µ–Ω?
     * –§—Ä–æ–Ω—Ç–µ–Ω–¥ —ñ –±–µ–∫–µ–Ω–¥ –ø—Ä–∞—Ü—é—é—Ç—å –Ω–∞ —Ä—ñ–∑–Ω–∏—Ö –ø–æ—Ä—Ç–∞—Ö –∞–±–æ –¥–æ–º–µ–Ω–∞—Ö
     *
     * http://localhost:3000 (React/Vue/Angular)
     * http://localhost:8081 (Spring Boot)
     * üî¥ –ë–µ–∑ CORS –±—Ä–∞—É–∑–µ—Ä –∑–∞–±–ª–æ–∫—É—î –∑–∞–ø–∏—Ç
     * ‚úÖ –ó CORS –±–µ–∫–µ–Ω–¥ –ø–æ–≤—ñ–¥–æ–º–ª—è—î –±—Ä–∞—É–∑–µ—Ä—É, —â–æ –∑–∞–ø–∏—Ç –¥–æ–∑–≤–æ–ª–µ–Ω–æ
     * API –¥–æ—Å—Ç—É–ø–Ω–µ –∑ —ñ–Ω—à–æ–≥–æ –¥–æ–º–µ–Ω—É
     *
     * –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –±–µ–∫–µ–Ω–¥ api.myapp.com –¥–æ—Å—Ç—É–ø–Ω–∏–π –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É frontend.myapp.com
     * CORS –¥–æ–∑–≤–æ–ª—è—î –∑–∞–ø–∏—Ç–∏ —Ç—ñ–ª—å–∫–∏ –∑ –¥–æ–≤—ñ—Ä–µ–Ω–∏—Ö —Å–∞–π—Ç—ñ–≤.
     * –ó–∞—Ö–∏—Å—Ç –≤—ñ–¥ —à–∫—ñ–¥–ª–∏–≤–∏—Ö —Å–∫—Ä–∏–ø—Ç—ñ–≤
     *
     * CORS –±–ª–æ–∫—É—î –Ω–µ—Å–∞–Ω–∫—Ü—ñ–æ–Ω–æ–≤–∞–Ω—ñ –∑–∞–ø–∏—Ç–∏ –≤—ñ–¥ —ñ–Ω—à–∏—Ö —Å–∞–π—Ç—ñ–≤, –∑–∞—Ö–∏—â–∞—é—á–∏ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤.
     * üîç –Ø–∫ –ø—Ä–∞—Ü—é—î CORS —É –±—Ä–∞—É–∑–µ—Ä—ñ?
     * –§—Ä–æ–Ω—Ç–µ–Ω–¥ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î –∑–∞–ø–∏—Ç –Ω–∞ –±–µ–∫–µ–Ω–¥ (http://localhost:8081)
     * http
     * –ö–æ–ø—ñ—é–≤–∞—Ç–∏
     * –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
     * GET /students HTTP/1.1
     * Host: localhost:8081
     * Origin: http://localhost:3000
     * –ë–µ–∫–µ–Ω–¥ –ø–µ—Ä–µ–≤—ñ—Ä—è—î Origin —ñ –¥–æ–¥–∞—î CORS-–∑–∞–≥–æ–ª–æ–≤–∫–∏ —É –≤—ñ–¥–ø–æ–≤—ñ–¥—å
     * http
     * –ö–æ–ø—ñ—é–≤–∞—Ç–∏
     * –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
     * HTTP/1.1 200 OK
     * Access-Control-Allow-Origin: http://localhost:3000
     * Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS
     * Access-Control-Allow-Headers: Content-Type, Authorization
     * –ë—Ä–∞—É–∑–µ—Ä –¥–æ–∑–≤–æ–ª—è—î –∑–∞–ø–∏—Ç, —è–∫—â–æ Access-Control-Allow-Origin –º—ñ—Å—Ç–∏—Ç—å http://localhost:3000.
     * üîç –Ø–∫ –º–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–ª–∏ CORS —É Spring Boot?
     * java
     * –ö–æ–ø—ñ—é–≤–∞—Ç–∏
     * –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
     * @Bean
     * public CorsFilter corsFilter() {
     *     UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();
     *     CorsConfiguration config = new CorsConfiguration();
     *
     *     config.setAllowCredentials(true); // ‚úÖ –î–æ–∑–≤–æ–ª—è—î–º–æ –∫—É–∫—ñ —Ç–∞ —Ç–æ–∫–µ–Ω–∏
     *     config.setAllowedOrigins(List.of("http://localhost:3000")); // ‚úÖ –î–æ–∑–≤–æ–ª—è—î–º–æ —Ç—ñ–ª—å–∫–∏ frontend
     *     config.setAllowedHeaders(List.of("*")); // ‚úÖ –î–æ–∑–≤–æ–ª—è—î–º–æ –≤—Å—ñ –∑–∞–≥–æ–ª–æ–≤–∫–∏
     *     config.setExposedHeaders(List.of("Authorization")); // ‚úÖ –î–æ–∑–≤–æ–ª—è—î–º–æ `Authorization`
     *     config.setAllowedMethods(List.of("GET", "POST", "PUT", "DELETE", "OPTIONS")); // ‚úÖ –î–æ–∑–≤–æ–ª—è—î–º–æ –≤—Å—ñ HTTP-–º–µ—Ç–æ–¥–∏
     *
     *     source.registerCorsConfiguration("/**", config);
     *     return new CorsFilter(source);
     * }
     * üìå –©–æ —Ç—É—Ç –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è?
     * –†—è–¥–æ–∫	–©–æ —Ä–æ–±–∏—Ç—å?
     * config.setAllowCredentials(true);	‚úÖ –î–æ–∑–≤–æ–ª—è—î –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é —á–µ—Ä–µ–∑ –∫—É–∫—ñ —Ç–∞ —Ç–æ–∫–µ–Ω–∏
     * config.setAllowedOrigins(List.of("http://localhost:3000"));	‚úÖ –î–æ–∑–≤–æ–ª—è—î –∑–∞–ø–∏—Ç–∏ —Ç—ñ–ª—å–∫–∏ –∑ frontend
     * config.setAllowedHeaders(List.of("*"));	‚úÖ –î–æ–∑–≤–æ–ª—è—î –≤—Å—ñ –∑–∞–≥–æ–ª–æ–≤–∫–∏
     * config.setExposedHeaders(List.of("Authorization"));	‚úÖ –î–æ–∑–≤–æ–ª—è—î –∫–ª—ñ—î–Ω—Ç—É –±–∞—á–∏—Ç–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ Authorization
     * config.setAllowedMethods(List.of("GET", "POST", "PUT", "DELETE", "OPTIONS"));	‚úÖ –î–æ–∑–≤–æ–ª—è—î –≤—Å—ñ HTTP-–º–µ—Ç–æ–¥–∏
     * üîç –ß–æ–º—É –≤–∞–∂–ª–∏–≤–∏–π OPTIONS?
     * –ö–æ–ª–∏ –∫–ª—ñ—î–Ω—Ç –Ω–∞–¥—Å–∏–ª–∞—î –∑–∞–ø–∏—Ç —ñ–∑ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ (Authorization, Content-Type —Ç–æ—â–æ), –±—Ä–∞—É–∑–µ—Ä —Å–ø–æ—á–∞—Ç–∫—É –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î preflight-–∑–∞–ø–∏—Ç (OPTIONS):
     *
     * http
     * –ö–æ–ø—ñ—é–≤–∞—Ç–∏
     * –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
     * OPTIONS /students HTTP/1.1
     * Host: localhost:8081
     * Origin: http://localhost:3000
     * Access-Control-Request-Method: GET
     * Access-Control-Request-Headers: Authorization
     * –ë–µ–∫–µ–Ω–¥ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î:
     *
     * http
     * –ö–æ–ø—ñ—é–≤–∞—Ç–∏
     * –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
     * HTTP/1.1 204 No Content
     * Access-Control-Allow-Origin: http://localhost:3000
     * Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS
     * Access-Control-Allow-Headers: Content-Type, Authorization
     * –¢–µ–ø–µ—Ä –±—Ä–∞—É–∑–µ—Ä –¥–æ–∑–≤–æ–ª—è—î —Å–ø—Ä–∞–≤–∂–Ω—ñ–π GET-–∑–∞–ø–∏—Ç.
     *
     * üîç –í–∏—Å–Ω–æ–≤–æ–∫
     * –©–æ —Ç–∞–∫–µ CORS?	–ù–∞–≤—ñ—â–æ –≤—ñ–Ω –ø–æ—Ç—Ä—ñ–±–µ–Ω?
     * CORS ‚Äì —Ü–µ –º–µ—Ö–∞–Ω—ñ–∑–º –±–µ–∑–ø–µ–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞	–î–æ–∑–≤–æ–ª—è—î –∞–±–æ –±–ª–æ–∫—É—î –∑–∞–ø–∏—Ç–∏ –º—ñ–∂ —Ä—ñ–∑–Ω–∏–º–∏ –¥–æ–º–µ–Ω–∞–º–∏
     * –ó–∞—Ö–∏—â–∞—î –≤—ñ–¥ –Ω–µ—Å–∞–Ω–∫—Ü—ñ–æ–Ω–æ–≤–∞–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤	–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è frontend ‚Üî backend API
     * –ë—Ä–∞—É–∑–µ—Ä —Å–ø–æ—á–∞—Ç–∫—É —Ä–æ–±–∏—Ç—å OPTIONS-–∑–∞–ø–∏—Ç	–ë–µ–∫–µ–Ω–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏
     * Spring Boot –º–æ–∂–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ CORS	–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ CorsFilter –∞–±–æ @CrossOrigin
     * üöÄ –ü—ñ—Å–ª—è —Ü–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –±—Ä–∞—É–∑–µ—Ä –±—ñ–ª—å—à–µ –Ω–µ –±–ª–æ–∫—É–≤–∞—Ç–∏–º–µ –∑–∞–ø–∏—Ç–∏ –º—ñ–∂ frontend (3000) —ñ backend (8081).
     */
}