package com.example.demo.config;

import com.example.demo.dao.UserRepository;
import com.example.demo.dao.entity.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

@Service
public class UserService implements UserDetailsService {

    @Autowired
    private UserRepository userRepository;


    @Override
    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {

        User user = userRepository.findByUserName(username).orElseThrow(()-> new UsernameNotFoundException("Not found"));
        return org.springframework.security.core.userdetails.User
                .withUsername(user.getUserName())
                .password(user.getPassword())
                .roles(user.getRole())
                .build();
    }

    /**
     * UserDetailsService ‚Äì —Ü–µ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å Spring Security, —è–∫–∏–π –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —ñ–∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –ø—ñ–¥ —á–∞—Å –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó.
     *
     * üîπ –û—Å–Ω–æ–≤–Ω–∞ —Ä–æ–ª—å:
     * –û—Ç—Ä–∏–º—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞ username (–ª–æ–≥—ñ–Ω).
     * –ü–æ–≤–µ—Ä—Ç–∞—î –æ–±'—î–∫—Ç UserDetails, —è–∫–∏–π –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó.
     * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è Spring Security —É –ø—Ä–æ—Ü–µ—Å—ñ –≤—Ö–æ–¥—É.
     * üîç –Ø–∫ –ø—Ä–∞—Ü—é—î —Ü–µ–π –º–µ—Ç–æ–¥?
     * üìå –†–æ–∑–±–∏—Ä–∞—î–º–æ –∫–æ–¥ —Ä—è–¥–æ–∫ –∑–∞ —Ä—è–¥–∫–æ–º
     * java
     * –ö–æ–ø—ñ—é–≤–∞—Ç–∏
     * –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
     * @Override
     * public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
     * –ú–µ—Ç–æ–¥ loadUserByUsername ‚Äì —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –º–µ—Ç–æ–¥ UserDetailsService, —è–∫–∏–π Spring Security –≤–∏–∫–ª–∏–∫–∞—î –ø—Ä–∏ –ª–æ–≥—ñ–Ω—ñ.
     * –ü–∞—Ä–∞–º–µ—Ç—Ä username ‚Äì –∑–Ω–∞—á–µ–Ω–Ω—è, —è–∫–µ –ø–µ—Ä–µ–¥–∞–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó.
     * –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π, –∫–∏–¥–∞—î–º–æ UsernameNotFoundException.
     * java
     * –ö–æ–ø—ñ—é–≤–∞—Ç–∏
     * –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
     * User user = userRepository.findByUserName(username)
     *         .orElseThrow(() -> new UsernameNotFoundException("Not found"));
     * üîπ –í–∏–∫–æ–Ω—É—î–º–æ –ø–æ—à—É–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É –±–∞–∑—ñ —á–µ—Ä–µ–∑ userRepository.findByUserName(username).
     * üîπ –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ–º–∞—î –≤ –±–∞–∑—ñ, –∫–∏–¥–∞—î–º–æ –ø–æ–º–∏–ª–∫—É UsernameNotFoundException, —ñ Spring Security –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–æ–≤–µ—Ä–Ω–µ 401 Unauthorized.
     * java
     * –ö–æ–ø—ñ—é–≤–∞—Ç–∏
     * –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
     * return org.springframework.security.core.userdetails.User
     *         .withUsername(user.getUserName()) // ‚úÖ –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ª–æ–≥—ñ–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     *         .password(user.getPassword()) // üîë –ü–µ—Ä–µ–¥–∞—î–º–æ –ø–∞—Ä–æ–ª—å (–≤—ñ–Ω –≤–∂–µ –∑–∞—Ö–µ—à–æ–≤–∞–Ω–∏–π —É –ë–î)
     *         .roles(user.getRole()) // üõ°Ô∏è –î–æ–¥–∞—î–º–æ —Ä–æ–ª—ñ (ROLE_USER, ROLE_ADMIN)
     *         .build();
     * üîπ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ User.withUsername() –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ UserDetails.
     * üîπ –ü–µ—Ä–µ–¥–∞—î–º–æ –ø–∞—Ä–æ–ª—å —ñ–∑ –±–∞–∑–∏, –±–æ Spring Security –π–æ–≥–æ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏–º–µ –ø—ñ–¥ —á–∞—Å –≤—Ö–æ–¥—É.
     * üîπ –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ä–æ–ª—ñ (roles(user.getRole())).
     * üìå UserDetails ‚Äì —Ü–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –æ–±'—î–∫—Ç Spring Security, —è–∫–∏–π –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó —Ç–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó.
     *
     * üîç –ß–æ–º—É –º–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ withUsername().password().roles()?
     * Spring Security –æ—á—ñ–∫—É—î UserDetails, —Ç–æ–º—É –º–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ User.withUsername().
     * –ü–µ—Ä–µ–¥–∞—î–º–æ –ø–∞—Ä–æ–ª—å, —è–∫–∏–π –≤–∂–µ –∑–∞—Ö–µ—à–æ–≤–∞–Ω–∏–π —É –±–∞–∑—ñ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —á–µ—Ä–µ–∑ BCrypt).
     * –î–æ–¥–∞—î–º–æ —Ä–æ–ª—ñ, —â–æ–± Spring Security –º—ñ–≥ –∫–µ—Ä—É–≤–∞—Ç–∏ –¥–æ—Å—Ç—É–ø–æ–º (ROLE_USER, ROLE_ADMIN).
     * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ build(), —â–æ–± —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ–≤–Ω–æ—Ü—ñ–Ω–Ω–∏–π –æ–±'—î–∫—Ç UserDetails.
     * üîç –Ø–∫ —Ü–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è —É Spring Security?
     * üìå –í SecurityConfig —Ä–µ—î—Å—Ç—Ä—É—î–º–æ UserDetailsService:
     *
     * java
     * –ö–æ–ø—ñ—é–≤–∞—Ç–∏
     * –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
     * @Bean
     * public UserDetailsService userDetailsService() {
     *     return new MyUserDetailsService(); // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –Ω–∞—à –∫–∞—Å—Ç–æ–º–Ω–∏–π —Å–µ—Ä–≤—ñ—Å
     * }
     *
     * @Bean
     * public AuthenticationManager authenticationManager(
     *         AuthenticationConfiguration authenticationConfiguration) throws Exception {
     *     return authenticationConfiguration.getAuthenticationManager();
     * }
     * üî• –¢–µ–ø–µ—Ä Spring Security –±—É–¥–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ loadUserByUsername() –ø—ñ–¥ —á–∞—Å –ª–æ–≥—ñ–Ω—É. üöÄ
     *
     * üîç –í–∏—Å–Ω–æ–≤–æ–∫
     * –©–æ —Ä–æ–±–∏—Ç—å?	–Ø–∫ –ø—Ä–∞—Ü—é—î?
     * –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –±–∞–∑–∏	userRepository.findByUserName(username)
     * –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ–º–∞—î	–ö–∏–¥–∞—î UsernameNotFoundException
     * –ü–æ–≤–µ—Ä—Ç–∞—î UserDetails	–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î User.withUsername().password().roles().build()
     * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –≤ Spring Security	–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø—ñ–¥–∫–ª—é—á–∞—î—Ç—å—Å—è –¥–ª—è –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
     * ‚úÖ –ë–µ–∑ UserDetailsService Spring Security –Ω–µ –∑–º–æ–∂–µ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ª–æ–≥—ñ–Ω —ñ –ø–∞—Ä–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
     * ‚úÖ –¶–µ–π –º–µ—Ç–æ–¥ ‚Äì –æ—Å–Ω–æ–≤–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –≤ Spring Security. üöÄ
     */
}
